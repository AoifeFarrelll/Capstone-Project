install.packages("LaplacesDemon")
library(LaplacesDemon)

#1. Using a lognormal distribution for relative risk
x1 <- rnorm(1, -0.675307,0.169737) 
rr <- exp(x1)
rr

#2. Using gamma distribution for costs
costs <- c(1701, 1774, 6948, 1055, 1278, 2059)
se_costs <- costs  

alpha <- (costs)^2 / (se_costs)^2
beta <- (se_costs)^2 / costs

probabilistic_costs <- rgamma(length(costs), shape = alpha, scale = beta)


#3. Using beta distribution for the transition from state C to state D
tpCC <-  rbeta(1, shape1 = 1312, shape2 = 437)
tpCD <- 1-tpCC

#4. Using Dirichlet distribution for other Transition Probabilities
alpha <- c(1251, 350, 116, 17)  
dirichlet_sampleA <- rdirichlet(1, alpha)
names(dirichlet_sampleA) <- c("tpAA", "tpAB", "tpAC", "tpAD")

beta <- c(731,512,15)
dirichlet_sampleB <- rdirichlet(1,beta)
names(dirichlet_sampleB) <- c("tpBB", "tpBC", "tpBD")

dirichlet_sampleC <- c(tpCC, tpCD)
names(dirichlet_sampleC) <- c("tpCC", "tpCD")



#Creating transition matrix with probabilistic values
tpm1 <- matrix(0, nrow = 4, ncol = 4) 
rownames(tpm1) <- colnames(tpm1) <- c("A", "B", "C", "D")
tpm1[1, ] <- dirichlet_sampleA
tpm1[2, 2:4] <- dirichlet_sampleB  
tpm1[3, 3:4] <- dirichlet_sampleC 
tpm1[4, ] <- 0 

print(tpm1)


#Adapted from first exercise
intpop1 <- c(1000, 0, 0, 0)

cycles1 <- 20

population_over_time1 <- matrix(0, nrow = cycles1 + 1, ncol = length(intpop1))
population_over_time1[1, ] <- intpop1

for (t in 1:cycles1) {
  population_over_time1[t + 1, ] <- population_over_time1[t, ] %*% tpm1
}

results_table1 <- data.frame(
  Year1 = 0:cycles1,
  A = population_over_time1[, 1],
  B = population_over_time1[, 2],
  C = population_over_time1[, 3],
  D = population_over_time1[, 4]
)

print(results_table1)

cost_A <- probabilistic_costs[1] + probabilistic_costs[4] + 2278
cost_B <- probabilistic_costs[2] + probabilistic_costs[5] + 2278
cost_C <- probabilistic_costs[3] + probabilistic_costs[6] + 2278


total_undiscounted_costs <- 0
total_discounted_costs <- 0

for (t in 1:cycles1) {
  cost_t_A <- population_over_time1[t + 1, 1] * cost_A
  cost_t_B <- population_over_time1[t + 1, 2] * cost_B
  cost_t_C <- population_over_time1[t + 1, 3] * cost_C
  
  total_cost_t <- cost_t_A + cost_t_B + cost_t_C
  
  discount_factor <- 1 / (1.06^t)
  discounted_cost_t <- total_cost_t * discount_factor
  
  total_undiscounted_costs <- total_undiscounted_costs + total_cost_t
  total_discounted_costs <- total_discounted_costs + discounted_cost_t
}

total_life_years1 <- sum(population_over_time1[, 1:3]/1000)

total_undiscounted_costs <- total_undiscounted_costs / 1000
total_discounted_costs <- total_discounted_costs / 1000

cat("Total Life Years for Monotherapy:", total_life_years1)
cat("Total Undiscounted Costs for Monotherapy:", total_undiscounted_costs)
cat("Total Discounted Costs for Monotherapy:", total_discounted_costs)

tpm2 <- tpm1 * rr

row_sums <- rowSums(tpm2) 

for (i in 1:3) 
{
  non_zero <- which(tpm1[i, ] > 0)
  
  if (length(non_zero) > 0) {
    first_index <- non_zero[1]
    tpm2[i, first_index] <- 1 - sum(tpm2[i, -first_index])
  }
}

tpm2[4, ] <- 0  

print(tpm2)


intpop2 <- c(1000, 0, 0, 0)

cycles2 <- 20

population_over_time2 <- matrix(0, nrow = cycles2 + 1, ncol = length(intpop2))
population_over_time2[1, ] <- intpop2

for (t in 1:cycles2) {
  if (t <= 2) {
    population_over_time2[t + 1, ] <- population_over_time2[t, ] %*% tpm2  
  } else {
    population_over_time2[t + 1, ] <- population_over_time2[t, ] %*% tpm1  
  }
}

results_table2 <- data.frame(
  Year2 = 0:cycles2,
  A = population_over_time2[, 1],
  B = population_over_time2[, 2],
  C = population_over_time2[, 3],
  D = population_over_time2[, 4]
)

print(results_table2)


cost_2A <- probabilistic_costs[1] + probabilistic_costs[4] + 2278 + 2086.5
cost_2B <- probabilistic_costs[2] + probabilistic_costs[5] + 2278 + 2086.5
cost_2C <- probabilistic_costs[3] + probabilistic_costs[6] + 2278 + 2086.5

total_undiscounted_costs2 <- 0
total_discounted_costs2 <- 0

for (t in 1:cycles2) {
  if (t <= 2) {
    cost_t_2A <- population_over_time2[t+1,1] * cost_2A
    cost_t_2B <- population_over_time2[t+1,2] * cost_2B
    cost_t_2C <- population_over_time2[t+1,3] * cost_2C
    
  } else {
    cost_t_2A <- population_over_time2[t+1,1] * cost_A
    cost_t_2B <- population_over_time2[t+1,2] * cost_B
    cost_t_2C <- population_over_time2[t+1,3] * cost_C 
  }
  total_cost_2t <- cost_t_2A + cost_t_2B + cost_t_2C
  
  discount_factor2 <- 1 / (1.06^t)
  discounted_cost_2t <- total_cost_2t * discount_factor2
  
  total_undiscounted_costs2 <- total_undiscounted_costs2 + total_cost_2t
  total_discounted_costs2 <- total_discounted_costs2 + discounted_cost_2t
}

total_life_years2 <- sum(population_over_time2[, 1:3]/1000)

total_undiscounted_costs2 <- total_undiscounted_costs2/1000
total_discounted_costs2 <- total_discounted_costs2/1000

cat("Total Life Years for Combination Therapy:", total_life_years2)
cat("Total Undiscounted Costs for Combination Therapy:", total_undiscounted_costs2)
cat("Total Discounted Costs for Combination Therapy:", total_discounted_costs2)

total_life_years_gained <- total_life_years2-total_life_years1
total_cost_difference <- total_discounted_costs2 - total_discounted_costs
ICER <- total_cost_difference/total_life_years_gained

cat("Total Life Years Gained with Combination Therapy:", total_life_years_gained)
cat("Total Cost Difference between Therapies:", total_cost_difference)
cat("ICER value:", ICER)
