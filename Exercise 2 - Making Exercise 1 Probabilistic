library(ggplot2)
library(LaplacesDemon)
set.seed(1)

num_simulations <- 10000
results <- data.frame(x = numeric(num_simulations), y = numeric(num_simulations))

for (sim in 1:num_simulations) {
  
  x1 <- rnorm(1, -0.675307,0.169737) 
  rr <- exp(x1)
  
  costs <- c(1701, 1774, 6948, 1055, 1278, 2059)
  se_costs <- costs  
  
  alpha <- (costs)^2 / (se_costs)^2
  beta <- (se_costs)^2 / costs
  
  probabilistic_costs <- rgamma(length(costs), shape = alpha, scale = beta)
  
  tpCC <-  rbeta(1, shape1 = 1312, shape2 = 437)
  tpCD <- 1-tpCC
  
  alpha <- c(1251, 350, 116, 17)  
  dirichlet_sampleA <- rdirichlet(1, alpha)
  
  beta <- c(731,512,15)
  dirichlet_sampleB <- rdirichlet(1,beta)
  
  dirichlet_sampleC <- c(tpCC, tpCD)
  
  
  tpm1 <- matrix(0, nrow = 4, ncol = 4) 
  rownames(tpm1) <- colnames(tpm1) <- c("A", "B", "C", "D")
  tpm1[1, ] <- dirichlet_sampleA
  tpm1[2, 2:4] <- dirichlet_sampleB  
  tpm1[3, 3:4] <- dirichlet_sampleC 
  tpm1[4, ] <- 0 
  
  
  intpop1 <- c(1000, 0, 0, 0)
  cycles1 <- 20
  population_over_time1 <- matrix(0, nrow = cycles1 + 1, ncol = length(intpop1))
  population_over_time1[1, ] <- intpop1
  for (t in 1:cycles1) {
    population_over_time1[t + 1, ] <- population_over_time1[t, ] %*% tpm1
  }
  
  total_life_years1 <- sum(population_over_time1[, 1:3]/1000)
  
  
  cost_A <- probabilistic_costs[1] + probabilistic_costs[4] + 2278
  cost_B <- probabilistic_costs[2] + probabilistic_costs[5] + 2278
  cost_C <- probabilistic_costs[3] + probabilistic_costs[6] + 2278
  
  total_discounted_costs <- 0
  for (t in 1:cycles1) {
    total_cost_t <- sum(population_over_time1[t + 1, 1:3] * c(cost_A, cost_B, cost_C))
    total_discounted_costs <- total_discounted_costs + total_cost_t / (1.06^t)
  }
  total_discounted_costs <- total_discounted_costs / 1000
  
  tpm2 <- tpm1 * rr
  for (i in 1:3) {
    non_zero <- which(tpm1[i, ] > 0)
    if (length(non_zero) > 0) {
      first_index <- non_zero[1]
      tpm2[i, first_index] <- 1 - sum(tpm2[i, -first_index])
    }
  }
  tpm2[4, ] <- 0  
  
  intpop2 <- c(1000, 0, 0, 0)
  cycles2 <- 20
  population_over_time2 <- matrix(0, nrow = cycles2 + 1, ncol = length(intpop2))
  population_over_time2[1, ] <- intpop2
  for (t in 1:cycles2) {
    if (t <= 2) {
      population_over_time2[t + 1, ] <- population_over_time2[t, ] %*% tpm2  
    } else {
      population_over_time2[t + 1, ] <- population_over_time2[t, ] %*% tpm1  
    }
  }
  
  total_life_years2 <- sum(population_over_time2[, 1:3]/1000)
  
  total_discounted_costs2 <- 0
  for (t in 1:cycles2) {
    cost_t_2 <- if (t <= 2) {
      sum(population_over_time2[t+1,1:3] * (c(cost_A, cost_B, cost_C) + 2086.5))
    } else {
      sum(population_over_time2[t+1,1:3] * c(cost_A, cost_B, cost_C))
    }
    total_discounted_costs2 <- total_discounted_costs2 + cost_t_2 / (1.06^t)
  }
  total_discounted_costs2 <- total_discounted_costs2 / 1000
  
  
  total_life_years_gained <- total_life_years2 - total_life_years1
  total_cost_difference <- total_discounted_costs2 - total_discounted_costs
  
  
  results[sim, ] <- c(total_life_years_gained, total_cost_difference)
}

ggplot(results, aes(x = x, y = y)) +
  geom_point(color = "black", size = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey") +
  stat_ellipse(level = 0.90, color = "red", linewidth = 1) +
  stat_ellipse(level = 0.95, color = "green", linewidth = 1) +
  stat_ellipse(level = 0.99, color = "blue", linewidth = 1) +
  annotate("text", x = max(results$x) * 0.1, y = max(results$y) * 0.9, 
           label = "90% CI", color = "red", size = 4, fontface = "bold") +
  annotate("text", x = max(results$x) * 0.1, y = max(results$y) * 0.8, 
           label = "95% CI", color = "green", size = 4, fontface = "bold") +
  annotate("text", x = max(results$x) * 0.1, y = max(results$y) * 0.7, 
           label = "99% CI", color = "blue", size = 4, fontface = "bold") +
  
  labs(title = "Cost-Effectiveness Plane", x = "Total Life Years Gained",
       y = "Total Cost Difference") +
  theme_minimal()

results$ICER <- results$y / results$x 

cat("Median ICER value:", median(results$ICER))

ggplot(results, aes(x = ICER)) +
  geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
  geom_vline(xintercept = median(results$ICER), color = "red", linewidth = 1, 
             linetype = "dashed") +
  labs(title = "Distribution of ICER Values", x = "ICER (Â£ per Life-Year Gained)", 
       y = "Frequency") +
  theme_minimal()

lambda_values <- seq(0, 25000, by = 1000)

ceac_probs <- numeric(length(lambda_values))

for (i in seq_along(lambda_values)) {
  lambda <- lambda_values[i]
  nmb <- lambda * results$x - results$y
  ceac_probs[i] <- mean(nmb > 0)
}

ceac_df <- data.frame(
  Lambda = lambda_values,
  Probability = ceac_probs
)

ggplot(ceac_df, aes(x = Lambda, y = Probability)) +
  geom_line(color = "blue", linewidth = 1.2) +
  labs(
    title = "Cost-Effectiveness Acceptability Curve (CEAC)",
    x = expression(paste("Willingness to Pay (", lambda, ")")),
    y = "Probability Cost-Effective"
  ) +
  theme_minimal()
